import java.util.*;
class page
{
	public static void main(String args[])
	{
		Scanner sc= new Scanner(System.in);
		int sop,pgs,som,nf,np,offset,memorybits,logicalbits,pageno,frameno,offsetindec,phyadd;
		System.out.print("Enter the size of process(in kB): ");
		sop=sc.nextInt();
		System.out.print("Enter the size of page(in Bytes): ");
		pgs=sc.nextInt();
		System.out.print("Enter the size of main memory(in kB): ");
		som=sc.nextInt();
		nf=som*1024/pgs;
		np=sop*1024/pgs;
		int ptable[][]=new int[np][2];
		System.out.println("No. of Frames : "+nf);
		System.out.println("No. of Pages : "+np);
		System.out.println("Enter Page Table:");		
		for(int i=0;i<np;i++)
		{
			System.out.print(i+". ");
			ptable[i][0]=sc.nextInt();
			ptable[i][1]=sc.nextInt();
		}
		logicalbits=(int)(Math.log(sop*1024)/Math.log(2));
		memorybits=(int)(Math.log(som*1024)/Math.log(2));
		offset=(int)(Math.log(pgs)/Math.log(2));
		System.out.println("No of bits in main memory address : "+memorybits);		
		System.out.println("No. of bits for offset: "+offset);
		System.out.println("No. of bits for frame : "+(memorybits-offset));
		System.out.println("No of bits in logical address : "+logicalbits);		
		System.out.println("No. of bits for offset: "+offset);
		System.out.println("No. of bits for page no : "+(logicalbits-offset));
		//sc.nextLine();
		System.out.print("Enter Logical Address");
		String logical,physical;
		logical=sc.next();

		pageno=Integer.parseInt(logical.substring(0,logicalbits-offset),2);
		offsetindec=Integer.parseInt(logical.substring(logicalbits-offset),2);
		if(ptable[pageno][1]==1)
		{
			frameno=ptable[pageno][0];
			physical=Integer.toBinaryString(frameno);
			while(physical.length()<(memorybits-offset))
				physical="0"+physical;

			String physical_addr=physical+logical.substring(logicalbits-offset);
			System.out.print("Physical Address"+physical_addr);
		}
		else
			System.out.println("Page fault");
	
	}
}


OUTPUT:

CASE 1 :

Enter the size of process(in kB): 2
Enter the size of page(in Bytes): 256
Enter the size of main memory(in kB): 1
No. of Frames : 4
No. of Pages : 8
Enter Page Table:
0. 2 1
1. 3 0
2. 3 0
3. 1 0
4. 1 1
5. 0 0
6. 0 0
7. 0 1
No of bits in main memory address : 10
No. of bits for offset: 8
No. of bits for frame : 2
No of bits in logical address : 11
No. of bits for offset: 8
No. of bits for page no : 3
Enter Logical Address01000000000
Page fault

CASE 2:

Enter the size of process(in kB): 2
Enter the size of page(in Bytes): 256
Enter the size of main memory(in kB): 1
No. of Frames : 4
No. of Pages : 8
Enter Page Table:
0. 2 1
1. 3 0
2. 3 0
3. 1 0
4. 1 1
5. 0 0
6. 0 0
7. 0 1
No of bits in main memory address : 10
No. of bits for offset: 8
No. of bits for frame : 2
No of bits in logical address : 11
No. of bits for offset: 8
No. of bits for page no : 3
Enter Logical Address11100000001
Physical Address000000001